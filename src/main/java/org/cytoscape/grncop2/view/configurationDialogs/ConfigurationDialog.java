package org.cytoscape.grncop2.view.configurationDialogs;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.cytoscape.grncop2.controller.tasks.ExecuteGRNCOP2Task;
import org.cytoscape.grncop2.controller.utils.CySwing;
import org.cytoscape.grncop2.model.logic.utils.CSVFileReader;
import org.cytoscape.work.Task;
import org.cytoscape.work.TaskIterator;
import org.cytoscape.work.TaskManager;

/**
 * @license Apache License V2 <http://www.apache.org/licenses/LICENSE-2.0.html>
 * @author Juan José Díaz Montaña
 */
public class ConfigurationDialog extends javax.swing.JDialog {
    private final TaskManager taskManager;
    
    private char csvSeparator = ';';
    
    private String genesFilePath;
    private int genes;
    private final DefaultListModel<String> datasetsListModel = new DefaultListModel(); 
    private File currentFolder;

    /**
     * Creates new form NewJDialog
     */
    public ConfigurationDialog(TaskManager taskManager) {
        super(CySwing.getDesktopJFrame(), true);
        initComponents();
        setLocationRelativeTo(CySwing.getDesktopJFrame());
        this.taskManager = taskManager;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        csvDelimiterGroup = new javax.swing.ButtonGroup();
        datasetsPanel = new javax.swing.JLayeredPane();
        loadDatasetButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        datasetList = new javax.swing.JList();
        deleteDatasetButton = new javax.swing.JButton();
        runGRNCOP2Button = new javax.swing.JButton();
        windowLabel = new javax.swing.JLabel();
        windowSpinner = new javax.swing.JSpinner();
        fileSeparatorLabel = new javax.swing.JLabel();
        tabRadioButton = new javax.swing.JRadioButton();
        comaRadioButton = new javax.swing.JRadioButton();
        semicolonRadioButton = new javax.swing.JRadioButton();
        geneFileButton = new javax.swing.JButton();
        genesFileTextField = new javax.swing.JTextField();

        csvDelimiterGroup.add(tabRadioButton);
        csvDelimiterGroup.add(comaRadioButton);
        csvDelimiterGroup.add(semicolonRadioButton);

        setTitle("GRNCOP2");
        setResizable(false);

        datasetsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Datasets"));

        loadDatasetButton.setText("Add");
        loadDatasetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDatasetButtonActionPerformed(evt);
            }
        });

        datasetList.setModel(datasetsListModel);
        jScrollPane1.setViewportView(datasetList);

        deleteDatasetButton.setText("Delete");
        deleteDatasetButton.setToolTipText("");
        deleteDatasetButton.setEnabled(false);
        deleteDatasetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDatasetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datasetsPanelLayout = new javax.swing.GroupLayout(datasetsPanel);
        datasetsPanel.setLayout(datasetsPanelLayout);
        datasetsPanelLayout.setHorizontalGroup(
            datasetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datasetsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datasetsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loadDatasetButton)
                .addGap(18, 18, 18)
                .addComponent(deleteDatasetButton)
                .addGap(144, 144, 144))
        );
        datasetsPanelLayout.setVerticalGroup(
            datasetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datasetsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datasetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadDatasetButton)
                    .addComponent(deleteDatasetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        datasetsPanel.setLayer(loadDatasetButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        datasetsPanel.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        datasetsPanel.setLayer(deleteDatasetButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        runGRNCOP2Button.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        runGRNCOP2Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exec.gif"))); // NOI18N
        runGRNCOP2Button.setText("Run GRNCOP2");
        runGRNCOP2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runGRNCOP2ButtonActionPerformed(evt);
            }
        });

        windowLabel.setText("Window");

        windowSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(0), null, Integer.valueOf(1)));

        fileSeparatorLabel.setText("File delimiter");

        tabRadioButton.setText("Tab");
        tabRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabRadioButtonActionPerformed(evt);
            }
        });

        comaRadioButton.setText("Coma");
        comaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comaRadioButtonActionPerformed(evt);
            }
        });

        semicolonRadioButton.setSelected(true);
        semicolonRadioButton.setText("Semicolon");
        semicolonRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semicolonRadioButtonActionPerformed(evt);
            }
        });

        geneFileButton.setText("Select genes file");
        geneFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geneFileButtonActionPerformed(evt);
            }
        });

        genesFileTextField.setBackground(new java.awt.Color(238, 238, 238));
        genesFileTextField.setText("Genes file selected (X genes)");
        genesFileTextField.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(windowLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(windowSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fileSeparatorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comaRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(semicolonRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datasetsPanel)
                            .addComponent(runGRNCOP2Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(geneFileButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genesFileTextField)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(windowLabel)
                    .addComponent(windowSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileSeparatorLabel)
                    .addComponent(tabRadioButton)
                    .addComponent(comaRadioButton)
                    .addComponent(semicolonRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(geneFileButton)
                    .addComponent(genesFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datasetsPanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runGRNCOP2Button)
                .addContainerGap())
        );

        genesFileTextField.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runGRNCOP2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runGRNCOP2ButtonActionPerformed
        setVisible(false);

        if (genesFilePath == null) {
            CySwing.displayPopUpMessage("No gene file selected.");
            return;
        }
        
        if (datasetsListModel.isEmpty()) {
            CySwing.displayPopUpMessage("No datasets selected.");
            return;
        }
        
        taskManager.execute(new TaskIterator(new Task[] { new ExecuteGRNCOP2Task(
            genesFilePath,
            Arrays.asList(datasetsListModel.toArray()).toArray(new String[datasetsListModel.size()]),
            (Integer)windowSpinner.getValue()
        ) }));
    }//GEN-LAST:event_runGRNCOP2ButtonActionPerformed

    private void geneFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geneFileButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(currentFolder);
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue != 0) {
            return;
        }
        
        currentFolder = new File(fileChooser.getSelectedFile().getParent());
        genesFilePath = fileChooser.getSelectedFile().getAbsolutePath();
        genes = 0;
        try (BufferedReader br = new BufferedReader(new FileReader(genesFilePath))) {
            while (br.readLine() != null) {
                genes++;
            }
        } catch (FileNotFoundException ex) {
            CySwing.displayPopUpMessage("The gene's file couldn't be read.");
        } catch (IOException ex) {
            CySwing.displayPopUpMessage("The gene's file couldn't be read.");
        }
 
        deleteDatasetButton.setEnabled(false);
        datasetsListModel.removeAllElements();
        geneFileButton.setText("Change genes file");
        genesFileTextField.setText("Genes file selected (" + genes + " genes)");
        genesFileTextField.setVisible(true);
    }//GEN-LAST:event_geneFileButtonActionPerformed

    private void loadDatasetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDatasetButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(currentFolder);
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue != 0) {
            return;
        }
        
        currentFolder = new File(fileChooser.getSelectedFile().getParent());
        String datasetFile = fileChooser.getSelectedFile().getAbsolutePath();

        int i = 0;
        int samples = 0;
        List<String> row;
        try {
            CSVFileReader CSVreader = new CSVFileReader(datasetFile, csvSeparator);
            while ((row = CSVreader.readFields()) != null) {
                if (i == 0) {
                    samples = row.size();
                } else {
                    if (row.size() != samples) {
                        CySwing.displayPopUpMessage("The dataset is invalid.\nIt should contain the same number of data point for each gene.\nEnsure that you have selected the correct delimiter.");
                        return;
                    }
                }
                i++;
            }
            
            if (i != genes) {
                CySwing.displayPopUpMessage("The dataset is invalid.\nIt should contain a row for each gene (" + genes + ").");
                return;
            }

            deleteDatasetButton.setEnabled(true);
            datasetsListModel.addElement(datasetFile);
        } catch (IOException ex) {
            CySwing.displayPopUpMessage("The dataset file couldn't be read.");
        }
    }//GEN-LAST:event_loadDatasetButtonActionPerformed

    private void deleteDatasetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDatasetButtonActionPerformed
        for (int i : datasetList.getSelectedIndices()) {
            datasetsListModel.removeElementAt(i);
        }
    }//GEN-LAST:event_deleteDatasetButtonActionPerformed

    private void tabRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabRadioButtonActionPerformed
        csvSeparator = '\t';
    }//GEN-LAST:event_tabRadioButtonActionPerformed

    private void comaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comaRadioButtonActionPerformed
        csvSeparator = ',';
    }//GEN-LAST:event_comaRadioButtonActionPerformed

    private void semicolonRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semicolonRadioButtonActionPerformed
        csvSeparator = ';';
    }//GEN-LAST:event_semicolonRadioButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton comaRadioButton;
    private javax.swing.ButtonGroup csvDelimiterGroup;
    private javax.swing.JList datasetList;
    private javax.swing.JLayeredPane datasetsPanel;
    private javax.swing.JButton deleteDatasetButton;
    private javax.swing.JLabel fileSeparatorLabel;
    private javax.swing.JButton geneFileButton;
    private javax.swing.JTextField genesFileTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadDatasetButton;
    private javax.swing.JButton runGRNCOP2Button;
    private javax.swing.JRadioButton semicolonRadioButton;
    private javax.swing.JRadioButton tabRadioButton;
    private javax.swing.JLabel windowLabel;
    private javax.swing.JSpinner windowSpinner;
    // End of variables declaration//GEN-END:variables

    class SliderChangeListener implements ChangeListener {
        private final JTextField textField;
        public SliderChangeListener(JTextField textField) {
            this.textField = textField;
        }
        @Override
        public void stateChanged(ChangeEvent changeEvent) {
            Object source = changeEvent.getSource();
            if (source instanceof JSlider) {
                JSlider slider = (JSlider) source;
                if (!slider.getValueIsAdjusting()) {
                  textField.setText("" + slider.getValue());
                }
            }
        }
    }
}
